  name: test

  on:
    push:
      branches:
        - master
    pull_request:
      types: [opened, synchronize, reopened]

  jobs:
    cypress-tests:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: hoverkraft-tech/compose-action@v2.0.2
          with:
            down-flags: '--volumes'
        - name: Run tests
          run: |
            cd tests
            npm install
            npx cypress run
        - name: Upload screenshots
          if: failure()
          uses: actions/upload-artifact@v4
          with:
            name: screenshots
            path: tests/cypress/screenshots/
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Install Subversion
          run: sudo apt-get update && sudo apt-get install -y subversion

        - name: Build plugin zip file
          run: ./build.bash

        - name: Upload build artifact
          uses: actions/upload-artifact@v4
          with:
            name: komoju-japanese-payments
            path: komoju-japanese-payments.zip
            retention-days: 1

    e2e-tests:
      needs: [build]
      timeout-minutes: 20
      runs-on: ubuntu-latest
      container: mcr.microsoft.com/playwright:v1.47.2-jammy
      steps:
        - name: Clean Workspace Folder for self-hosted runners
          run: rm -rf ./* ./.??* || true; ls -al

        - name: Checkout degica/valis
          uses: actions/checkout@v4
          with:
            repository: degica/valis
            ref: master
            token: ${{ secrets.BUNDLER_SSH_KEY }}

        - name: Install dependencies
          run: npm ci

        - name: Configure Datadog Test Optimization
          uses: datadog/test-visibility-github-action@v2
          with:
            service: valis
            languages: js
            api_key: ${{ secrets.DD_API_KEY }}

        - name: Setup test environment variables
          run: |
            cp .env.sample .env
            echo "TEST_URL=${{ secrets.TEST_URL }}" >> .env
            echo "CI=true" >> .env

        - name: Run Playwright tests
          run: npx playwright test tests/tests-suites/woocommerce/woocommerce.spec.ts
          env:
            HOME: /root
            WAF_STAGING_TOKEN: ${{ secrets.WAF_STAGING_TOKEN }}
            NODE_OPTIONS: -r ${{ env.DD_TRACE_PACKAGE }}

        - name: Upload Playwright report
          uses: actions/upload-artifact@v4
          if: ${{ always() }}
          with:
            name: playwright-report
            path: playwright-report/
            retention-days: 30
            include-hidden-files: true